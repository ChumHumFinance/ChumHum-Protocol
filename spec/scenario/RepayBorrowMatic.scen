-- Tests for repaying borrows

Macro SetupBorrow borrowRate
    NewComptroller price:1.0 -- TODO: This should really be a price for a specific asset
    ListedCToken ZRX cZRX borrowRate
    ListedMATICToken cMATIC borrowRate 0.005e9
    SetCollateralFactor cZRX collateralFactor:0.5
    SetCollateralFactor cMATIC collateralFactor:0.5
    Donate cMATIC 0.003e18
    Prep Geoff Some ZRX cZRX
    Mint Geoff 100e18 cZRX
    EnterMarkets Geoff cZRX cMATIC

Macro NewBorrowMatic borrowAmount borrowRate
    SetupBorrow borrowRate
    Borrow Geoff borrowAmount cMATIC

Test "Borrow, hold a few blocks, and repay part"
    NewBorrowMatic borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.001e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0025e18
    -- Now let's repay one full token
    Expect Changes (MATICBalance Geoff) -0.001e18
    Expect Changes (MATICBalance cMATIC) +0.001e18
    RepayBorrowMatic Geoff 0.001e18 cMATIC
    ---- Let's check the overall numbers
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0015e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.0015e18
    FastForward 200000 Blocks -- 0.0015e18 * (1 + 2000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.003e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.003e18

Test "Borrow, hold a few blocks, and repay part via maximillion"
    NewBorrowMatic borrowAmount:0.001e18 borrowRate:0.000005
    Maximillion Deploy cMATIC
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.001e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0025e18
    -- Now let's repay one full token
    Expect Changes (MATICBalance Geoff) -0.001e18
    Expect Changes (MATICBalance cMATIC) +0.001e18
    RepayBorrowMaticMax Geoff 0.001e18 cMATIC
    ---- Let's check the overall numbers
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0015e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.0015e18
    FastForward 200000 Blocks -- 0.0015e18 * (1 + 200000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.003e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.003e18

Test "Don't borrow and then do repay"
    SetupBorrow borrowRate:0.000005
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) Zero
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0 * (1 + 300000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    -- Now let's repay one full token
    Expect Changes (MATICBalance Geoff) Zero
    Expect Changes (MATICBalance cMATIC) Zero
    RepayBorrowMatic Geoff 0 cMATIC
    ---- Let's check the overall numbers
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) Zero

Test "Don't borrow and repay part via maximillion"
    SetupBorrow borrowRate:0.000005
    Maximillion Deploy cMATIC
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) Zero
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0 * (1 + 300000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    -- Now let's repay one full token
    Expect Changes (MATICBalance Geoff) Zero
    Expect Changes (MATICBalance cMATIC) Zero
    RepayBorrowMaticMax Geoff 0.001e18 cMATIC
    ---- Let's check the overall numbers
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) Zero

Test "Borrow, hold a few blocks, and repay full"
    NewBorrowMatic borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.001e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0025e18
    -- Now let's repay fully
    Expect Changes (MATICBalance Geoff) -0.0025e18
    Expect Changes (MATICBalance cMATIC) +0.0025e18
    RepayBorrowMatic Geoff 0.0025e18 cMATIC
    -- Let's check the overall numbers
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) Zero
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) Zero

Test "Borrow, hold a few blocks, and repay full via maximillion"
    NewBorrowMatic borrowAmount:0.001e18 borrowRate:0.000005
    Maximillion Deploy cMATIC
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.001e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0025e18
    -- Now let's repay fully
    Expect Changes (MATICBalance Geoff) -0.0025e18
    Expect Changes (MATICBalance cMATIC) +0.0025e18
    RepayBorrowMaticMax Geoff 0.0025e18 cMATIC
    -- Let's check the overall numbers
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) Zero
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) Zero

Test "Borrow, hold a few blocks, and repay too much"
    NewBorrowMatic borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.001e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0025e18
    -- Now let's repay fully
    Expect Changes (MATICBalance Geoff) Zero
    Expect Changes (MATICBalance cMATIC) Zero
    -- TODO: This currently drains the sent-matic
    AllowFailures
    RepayBorrowMatic Geoff 1.0e18 cMATIC
    Assert Revert "revert REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED"
    -- Let's check the overall numbers
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0025e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.0025e18

Test "Borrow, hold a few blocks, and repay too much via maximillion"
    NewBorrowMatic borrowAmount:0.001e18 borrowRate:0.000005
    Maximillion Deploy cMATIC
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.001e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0025e18
    -- Now let's repay fully
    Expect Changes (MATICBalance Geoff) -0.0025e18
    Expect Changes (MATICBalance cMATIC) +0.0025e18
    RepayBorrowMaticMax Geoff 1.0e18 cMATIC
    -- Let's check the overall numbers
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) Zero
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) Zero
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) Zero

Test "Borrow, and get a negative total cash situation"
    NewBorrowMatic borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.001e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.001e18
    -- Let's zoom way forward into the future
    FastForward 9800000 Blocks -- 0.001e18 * (1 + 9800000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.05e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.05e18
    -- Now let's repay one bit
    RepayBorrowMatic Geoff 0.001e18 cMATIC
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.049e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.049e18

Test "Borrow, hold a few blocks, and repay behalf part"
    NewBorrowMatic borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.001e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0025e18
    -- Now let's repay one full token from another user
    RepayBorrowMaticBehalf Torrey Geoff 0.001e18 cMATIC
    Assert Equal (CToken cMATIC BorrowBalance Torrey) Zero
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0015e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.0015e18
    FastForward 200000 Blocks -- 0.0015e18 * (1 + 200000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Torrey) Zero
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.003e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.003e18

Test "Prohibit repay by comptroller hook"
    NewBorrowMatic borrowAmount:0.001e18 borrowRate:0.000005
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.001e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.001e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0025e18
    -- Now let's repay one full token
    Expect Changes (MATICBalance Geoff) Zero
    Expect Changes (MATICBalance cMATIC) Zero
    Comptroller UnList cMATIC -- Mock unlist cMATIC
    AllowFailures
    RepayBorrowMatic Geoff 0.001e18 cMATIC
    Assert RevertFailure COMPTROLLER_REJECTION "revert repayBorrow failed"
    ---- Let's check the overall numbers
    Assert Equal (CToken cMATIC BorrowBalance Geoff) 0.0025e18
    Assert Equal (CToken cMATIC TotalBorrowsCurrent) 0.0025e18
